#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define module 1000000007
#define pb push_back
#define IOS ios_base::sync_with_stdio(false); cin.tie(NULL);                        
#define bs binary_search
#define mp make_pair
#define endl '\n'
#define Endl '\n'

#define vi vector<int>
#define vll vector<long long>
#define ss string

#define mi map<int,int>
#define mll map<long long,long long>
#define mb map<int,bool>
#define ms map<string,int>

bool dfs(int** a,int sv,int parentVertex,int n,bool* vis)
{
//	cout<<sv<<endl;
	vis[sv]=true;
	for(int i=0;i<n;i++)
	{
		if(a[sv][i]==1 && i!=parentVertex && vis[i])
		{
			return true;
		}
		if(a[sv][i]==1 && !vis[i] )
		{
			int x=dfs(a,i,sv,n,vis);
			if(x)
				return true;
		}
	}
	return false;
}

bool cycle(int** a,int n,int e)
{
	bool* vis=new bool[n+3]();
	return dfs(a,0,-1,n,vis);	
}

int main()
{
	int i,j,n,e,x,y;
	cin>>n>>e;
	int** a=new int*[n+3];
	for(i=0;i<n;i++)
	{
		a[i]=new int[n+4]();
	}
	for(i=0;i<e;i++)
	{
		cin>>x>>y;
		a[x][y]=1;
		a[y][x]=1;
	}
	cout<<"cycle detection :    ";
	cout<<cycle(a,n,e);
	
	
}
